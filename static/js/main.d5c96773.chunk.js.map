{"version":3,"sources":["pages/About.js","pages/Projects.js","pages/Contact.js","pages/Home.js","App.js","utils/utils.js","store/reducers/contact.js","store/actions/actionTypes.js","index.js"],"names":["About","props","className","Projects","connect","state","loading","contact","Home","withRouter","path","component","Contact","exact","to","updateState","oldState","newState","initialState","emailStart","action","emailFail","emailSuccess","contactReducer","type","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","app","basename","process","ReactDOM","render","document","getElementById"],"mappings":"wRAUeA,EARD,SAAAC,GACZ,OACE,yBAAKC,UAAU,QACb,uCCKSC,EARE,SAAAF,GACf,OACE,yBAAKC,UAAU,QACb,0CCcSE,eANS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAME,QAAQD,WAIa,KAAzBF,EAfC,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QACjB,OACE,yBAAKJ,UAAU,QACb,uCACCI,EAAU,UAAY,kBCEdE,EARF,SAAAP,GACX,OACE,yBAAKC,UAAU,QACb,sCCgBSO,eAdH,WACV,OACE,yBAAKP,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,SAASC,UAAWX,IAChC,kBAAC,IAAD,CAAOU,KAAK,YAAYC,UAAWR,IACnC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWC,IAClC,kBAAC,IAAD,CAAOF,KAAK,IAAIG,OAAK,EAACF,UAAWH,IACjC,kBAAC,IAAD,CAAUM,GAAG,W,QCfRC,EAAc,SAACC,EAAUC,GACpC,OAAO,2BACFD,GACAC,ICADC,EAAe,CACnBZ,SAAS,GAGLa,EAAa,SAACd,EAAOe,GACzB,OAAOL,EAAYV,EAAO,CAAEC,SAAS,KAGjCe,EAAY,SAAChB,EAAOe,GACxB,OAAOL,EAAYV,EAAO,CAAEC,SAAS,KAGjCgB,EAAe,SAACjB,EAAOe,GAC3B,OAAOL,EAAYV,EAAO,CACxBC,SAAS,KAiBEiB,EAbQ,WAAmC,IAAlClB,EAAiC,uDAAzBa,EAAcE,EAAW,uCACvD,OAAQA,EAAOI,MACb,ICtBuB,cDuBrB,OAAOL,EAAWd,GACpB,ICvBsB,aDwBpB,OAAOgB,EAAUhB,GACnB,ICxByB,gBDyBvB,OAAOiB,EAAajB,GACtB,QACE,OAAOA,IEnBPoB,G,MAAUC,0BAAgB,CAC9BnB,QAASgB,KAGLI,EAAQC,sBAAYH,EAASI,8BAAoBC,0BAAgBC,OAEjEC,EACJ,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAD,CAAeM,SAAUC,IACvB,kBAAC,EAAD,QAKNC,IAASC,OAAOJ,EAAKK,SAASC,eAAe,W","file":"static/js/main.d5c96773.chunk.js","sourcesContent":["import React from 'react';\n\nconst About = props => {\n  return (\n    <div className=\"home\">\n      <h1>About</h1>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Projects = props => {\n  return (\n    <div className=\"home\">\n      <h1>Projects</h1>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/index';\n\nconst Contact = ({ loading }) => {\n  return (\n    <div className=\"home\">\n      <h1>Contact</h1>\n      {loading ? 'loading' : 'not loading'}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.contact.loading\n  };\n};\n\nexport default connect(mapStateToProps, null)(Contact);\n","import React from 'react';\n\nconst Home = props => {\n  return (\n    <div className=\"home\">\n      <h1>Home</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport About from './pages/About';\nimport Projects from './pages/Projects';\nimport Contact from './pages/Contact';\nimport Home from './pages/Home';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/\" exact component={Home} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","export const updateState = (oldState, newState) => {\n  return {\n    ...oldState,\n    ...newState\n  };\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateState } from '../../utils/utils';\n\nconst initialState = {\n  loading: false\n};\n\nconst emailStart = (state, action) => {\n  return updateState(state, { loading: true });\n};\n\nconst emailFail = (state, action) => {\n  return updateState(state, { loading: false });\n};\n\nconst emailSuccess = (state, action) => {\n  return updateState(state, {\n    loading: false\n  });\n};\n\nconst contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.EMAIL_START:\n      return emailStart(state, action);\n    case actionTypes.EMAIL_FAIL:\n      return emailFail(state, action);\n    case actionTypes.EMAIL_SUCCESS:\n      return emailSuccess(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;\n","export const EMAIL_SEND = 'EMAIL_SEND';\nexport const EMAIL_START = 'EMAIL_START';\nexport const EMAIL_FAIL = 'EMAIL_FAIL';\nexport const EMAIL_SUCCESS = 'EMAIL_SUCCESS';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './App';\nimport contactReducer from './store/reducers/contact';\nimport './index.css';\n\nconst reducer = combineReducers({\n  contact: contactReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}